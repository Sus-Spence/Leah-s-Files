app.stepsPerSec=10
from cmu_graphics import *

app.background='skyBlue'
grass=Rect(0,274,400,126,fill='green')

app.allBugs=[]
#scoring
#number of bugs on screen
bugScore=Label('# of bugs: ',0,15,fill='black',bold=True,size=18)
bugNumber=Label(0,385,16,fill='black',bold=True,size=18)
bugScore.right=bugNumber.left
bugNumber.right=390
#number of bugs removed from the screen
scoreName=Label('Your Score: ',0,18,fill='black',bold=True,size=18)
scoreName.left=10
score=Label(0,120,18,fill='black',bold=True,size=18)

#trees
tree1=Group(
    Rect(20,100,45,174,fill='brown'),
    Polygon(25,115,-13,80,-58,100,-57,95,-28,55,0,55,45,100,fill='brown'),
    Polygon(17,100,25,70,68,32,70,37,47,85,52,100,fill='brown'),
    Polygon(40,93,51,89,73,81,76,56,106,40,114,37,93,71,93,99,64,113,fill='brown'),
    Polygon(41,57,33,44,33,35,53,50,fill='brown')
    )
tree2=Group(
    Rect(20,100,45,174,fill='brown'),
    Polygon(25,115,-13,80,-58,100,-57,95,-28,55,0,55,45,100,fill='brown'),
    Polygon(17,100,25,70,68,32,70,37,47,85,52,100,fill='brown'),
    Polygon(40,93,51,89,73,81,76,56,106,40,114,37,93,71,93,99,64,113,fill='brown'),
    Polygon(41,57,33,44,33,35,53,50,fill='brown')
    )
tree3=Group(
    Rect(20,100,45,174,fill='brown'),
    Polygon(25,115,-13,80,-58,100,-57,95,-28,55,0,55,45,100,fill='brown'),
    Polygon(17,100,25,70,68,32,70,37,47,85,52,100,fill='brown'),
    Polygon(40,93,51,89,73,81,76,56,106,40,114,37,93,71,93,99,64,113,fill='brown'),
    Polygon(41,57,33,44,33,35,53,50,fill='brown')
    )
tree4=Group(
    Rect(20,100,45,174,fill='brown'),
    Polygon(25,115,-13,80,-58,100,-57,95,-28,55,0,55,45,100,fill='brown'),
    Polygon(17,100,25,70,68,32,70,37,47,85,52,100,fill='brown'),
    Polygon(40,93,51,89,73,81,76,56,106,40,114,37,93,71,93,99,64,113,fill='brown'),
    Polygon(41,57,33,44,33,35,53,50,fill='brown')
    )
tree1.centerX=25
tree2.centerX=125
tree3.centerX=225
tree4.centerX=325
    
leaf=Group(
    Circle(20,65,35,fill='green'),
    Circle(61,65,40,fill='green'),
    Circle(92,60,25,fill='green'),
    Circle(123,65,40,fill='green'),
    Circle(164,60,25,fill='green'),
    Circle(186,65,40,fill='green'),
    Circle(221,60,25,fill='green'),
    Circle(245,65,40,fill='green'),
    Circle(285,60,25,fill='green'),
    Circle(314,65,40,fill='green'),
    Circle(343,60,25,fill='green'),
    Circle(366,65,40,fill='green'),
    Circle(396,60,25,fill='green'),
    
    Circle(9,100,25,fill='green'),
    Circle(42,110,25,fill='green'),
    Circle(79,100,25,fill='green'),
    Circle(115,110,25,fill='green'),
    Circle(152,100,25,fill='green'),
    Circle(178,110,25,fill='green'),
    Circle(210,100,25,fill='green'),
    Circle(231,110,25,fill='green'),
    Circle(270,100,25,fill='green'),
    Circle(304,110,25,fill='green'),
    Circle(337,100,25,fill='green'),
    Circle(368,110,25,fill='green')
    )

#directions
directions=Group(
    Label('Kill the invasive Spotted Lantern flies by clicking on them before they',200,68,bold=True,size =11.8),
    Label('take over our ecosystem and destroy it!',200,84,bold=True,size=20),
    Label('See what new high score you can achieve!',200,103,bold=True,size=12.8))
directions.centerY=80

youLose=Group(
    Label('OH NO!!!',200,170,bold=True,size=40,fill='red',border='black'),
    Label('THE INVASIVE SPOTTED LANTERN',200,200,bold=True,size=23),
    Label('FLIES HAVE KILLED OUR FOREST!',200,230,bold=True,size=23))
youLose.visible=False

#path
cxOne=160
cxTwo=240
cxThree=200
cxFour=180
cxFive=220
Circle(cxOne-16,380,25,fill=gradient('brown', 'saddleBrown'))
Circle(cxOne-8,345,20,fill=gradient('brown', 'saddleBrown'))
Circle(cxOne,320,15,fill=gradient('brown', 'saddleBrown'))
Circle(cxOne+8,300,12,fill=gradient('brown', 'saddleBrown'))
Circle(cxOne+16,285,8,fill=gradient('brown', 'saddleBrown'))

Circle(cxTwo+16,380,25,fill=gradient('brown', 'saddleBrown'))
Circle(cxTwo+8,345,20,fill=gradient('brown', 'saddleBrown'))
Circle(cxTwo,320,15,fill=gradient('brown', 'saddleBrown'))
Circle(cxTwo-8,300,12,fill=gradient('brown', 'saddleBrown'))
Circle(cxTwo-16,285,8,fill=gradient('brown', 'saddleBrown'))

Circle(cxFour,380,25,fill=gradient('saddleBrown', 'brown'))
Circle(cxFour,345,20,fill=gradient('saddleBrown', 'brown'))
Circle(cxFour,320,15,fill=gradient('saddleBrown', 'brown'))
Circle(cxFour,300,12,fill=gradient('saddleBrown', 'brown'))
Circle(cxFour,285,12,fill=gradient('saddleBrown', 'brown'))

Circle(cxFive,380,25,fill=gradient('saddleBrown', 'brown'))
Circle(cxFive,345,20,fill=gradient('saddleBrown', 'brown'))
Circle(cxFive,320,15,fill=gradient('saddleBrown', 'brown'))
Circle(cxFive,300,12,fill=gradient('saddleBrown', 'brown'))
Circle(cxFive,285,12,fill=gradient('saddleBrown', 'brown'))

Circle(cxThree,380,25,fill=gradient('saddleBrown', 'brown'))
Circle(cxThree,345,20,fill=gradient('saddleBrown', 'brown'))
Circle(cxThree,320,15,fill=gradient('saddleBrown', 'brown'))
Circle(cxThree,300,12,fill=gradient('saddleBrown', 'brown'))
Circle(cxThree,285,12,fill=gradient('saddleBrown', 'brown'))

direction=Label('Do NOT let the number of bugs reach over 25.',200,379,bold=True,size=15)

app.url='cmu://236675/21518186/lanternflyimage-removebg-preview.png'

class Critter(object):
    def __init__(self,dsx,dsy,w,h,ra,speed,bugCount):
        self.speed=speed
        self.dsx=dsx
        self.dsy=dsy
        self.ra=ra
        self.bug=Group()
        self.w=w
        self.h=h
        self.bugCount=bugCount
        
    def drawBug(self):
        self.bug.add(Image(app.url, self.dsx, self.dsy, width=self.w, height=self.h,align='center',rotateAngle=self.ra))
        
    def move(self):
        self.bug.clear()
        x,y=getPointInDir(self.dsx,self.dsy,self.ra,self.speed)
        self.dsx=x
        self.dsy=y
        self.drawBug()
        
app.counter=0
        
def onStep():
    
    app.counter+=1
    if app.counter% 40==0:
        bugNumber.value+=1
        buggyRomp(bugNumber.value)
    if bugNumber.value>=25:
        youLose.visible=True
        youLose.toFront()
        leaf.visible=False
        directions.visible=False
        direction.visible=False
        app.stop()
    
    for bug1 in app.allBugs:
        app.stepsPerSecond+=0.04
        if (bug1.bug.centerY <= 0):
            bug1.dsy = 400
        
        if (bug1.bug.centerY >=400):
            bug1.dsy = 0
        
        if (bug1.bug.centerX >=400):
            bug1.dsx = 0
        
        if (bug1.bug.centerX <=0):
            bug1.dsx = 400
        bug1.speed+=0.0003
        bug1.move()

def buggyRomp(bugCount):
    rx = randrange(0,401)
    ry = randrange(0,401)
    ra=0
    if (rx>=ry):
        dsx=rx-20
        if (dsx<=200):
            dsy=0
            ra=randrange(145,215)
        else:
            dsy=400
            ra=randrange(-35,35)
                
    if (rx<ry):
        dsy=ry-20
        if (dsy>200):
            dsx=0
            ra=randrange(55,125)
        else:
            dsx=400
            ra=randrange(235,305)
            
    speed=randrange(4,17)
        
    bug1=Critter(dsx,dsy,50,50,ra,speed,bugCount)
    app.allBugs.append(bug1)

def onMousePress(mouseX,mouseY):
    for bug1 in app.allBugs:
        if (bug1.bug.hits (mouseX,mouseY)):
            bug1.bug.clear()
            app.allBugs.remove(bug1)
            score.value+=1
            bugNumber.value-=1
        
